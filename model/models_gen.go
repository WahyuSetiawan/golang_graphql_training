// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/juragankoding/golang_graphql_training/domain"
	"github.com/juragankoding/golang_graphql_training/models"
)

type ResultInsert interface {
	IsResultInsert()
}

type Brands struct {
	ID   int    `json:"ID"`
	Name string `json:"Name"`
}

type ResultAllBrands struct {
	Status string    `json:"status"`
	Code   int       `json:"code"`
	Data   []*Brands `json:"data"`
}

func (ResultAllBrands) IsResultInsert() {}

type ResultDeleteBrands struct {
	Status string `json:"status"`
	Code   int    `json:"code"`
}

func (ResultDeleteBrands) IsResultInsert() {}

type ResultDeleteCategories struct {
	Status string             `json:"status"`
	Code   int                `json:"code"`
	Data   *domain.Categories `json:"data"`
}

func (ResultDeleteCategories) IsResultInsert() {}

type ResultFetchCategories struct {
	Status string               `json:"status"`
	Code   int                  `json:"code"`
	Data   []*domain.Categories `json:"data"`
}

func (ResultFetchCategories) IsResultInsert() {}

type ResultInsertBrands struct {
	Status string  `json:"status"`
	Code   int     `json:"code"`
	Data   *Brands `json:"data"`
}

func (ResultInsertBrands) IsResultInsert() {}

type ResultInsertCategories struct {
	Status string             `json:"status"`
	Code   int                `json:"code"`
	Data   *domain.Categories `json:"data"`
}

func (ResultInsertCategories) IsResultInsert() {}

type ResultSingleBrands struct {
	Status string  `json:"status"`
	Code   int     `json:"code"`
	Data   *Brands `json:"data"`
}

func (ResultSingleBrands) IsResultInsert() {}

type ResultUpdateBrands struct {
	Status string  `json:"status"`
	Code   int     `json:"code"`
	Data   *Brands `json:"data"`
}

func (ResultUpdateBrands) IsResultInsert() {}

type ResultUpdateCategories struct {
	Status string             `json:"status"`
	Code   int                `json:"code"`
	Data   *domain.Categories `json:"data"`
}

func (ResultUpdateCategories) IsResultInsert() {}

type ResultGetAllJenisBarang struct {
	Status string                `json:"status"`
	Code   int                   `json:"code"`
	Data   []*models.JenisBarang `json:"data"`
}

func (ResultGetAllJenisBarang) IsResultInsert() {}

type ResultJenisBarang struct {
	Status string              `json:"status"`
	Code   int                 `json:"code"`
	Data   *models.JenisBarang `json:"data"`
}

func (ResultJenisBarang) IsResultInsert() {}
